{
  "name": "aida-platform-backend",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "wrangler dev --local",
    "dev:remote": "wrangler dev",
    "dev:mvp": "tsx watch src/server-mvp.ts",
    "start": "wrangler dev --local",
    "start:mvp": "tsx src/server-mvp.ts",
    "build": "tsc",
    "build:mvp": "tsc && node dist/server-mvp.js",
    "deploy": "wrangler deploy",
    "deploy:staging": "wrangler deploy --env staging",
    "deploy:production": "wrangler deploy --env production",
    "cf-typegen": "wrangler types",
    "type-check": "tsc --noEmit",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write src/**/*.{ts,tsx,js,jsx,json,md}",
    "format:check": "prettier --check src/**/*.{ts,tsx,js,jsx,json,md}",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:unit": "vitest run src/tests/unit/",
    "test:integration": "vitest run tests/",
    "test:auth": "vitest run tests/auth.test.ts",
    "test:assistants": "vitest run tests/assistants.test.ts",
    "test:conversations": "vitest run tests/conversations.test.ts",
    "test:memory": "vitest run tests/memory.test.ts",
    "test:e2e": "vitest run tests/e2e-workflow.test.ts",
    "test:all": "bash tests/run-all-tests.sh",
    "test:load": "vitest run --config vitest.load.config.ts",
    "test:security": "npm audit && vitest run --config vitest.security.config.ts",
    "test:tenant-isolation": "vitest run --config vitest.tenant.config.ts",
    "setup": "powershell -ExecutionPolicy Bypass -File scripts/dev-setup.ps1",
    "setup:secrets": "powershell -ExecutionPolicy Bypass -File scripts/setup-secrets.ps1",
    "logs": "wrangler tail",
    "logs:staging": "wrangler tail --env staging",
    "logs:production": "wrangler tail --env production",
    "clean": "rm -rf dist/ .wrangler/ node_modules/.cache/",
    "health": "curl http://localhost:8787/health",
    "health:mvp": "curl http://localhost:3000/health",
    "validate": "npm run type-check && npm run lint && npm run test:run",
    "fix": "npm run format && npm run lint:fix",
    "fix:dry-run": "echo \"Dry run - would execute: npm run format && npm run lint:fix\"",
    "fix:aggressive": "npm run format && npm run lint:fix && node scripts/fix-typescript-issues.mjs",
    "fix:cmd": "cmd /c scripts\\fix-all-issues.cmd",
    "fix:cmd:dry-run": "cmd /c scripts\\fix-all-issues.cmd --dry-run",
    "fix:simple": "cmd /c scripts\\fix-simple.cmd",
    "fix:typescript": "node scripts/simple-ts-fix.mjs",
    "fix:typescript:dry-run": "node scripts/simple-ts-fix.mjs --dry-run",
    "fix:typescript:advanced": "node scripts/fix-typescript-errors.mjs",
    "fix:typescript:advanced:dry-run": "node scripts/fix-typescript-errors.mjs --dry-run",
    "fix:bash": "bash scripts/fix-all-issues.sh",
    "fix:bash:dry-run": "bash scripts/fix-all-issues.sh --dry-run",
    "fix:all": "npm run fix && npm run validate",
    "lint:summary": "node scripts/lint-summary.mjs",
    "fix:unsafe": "node scripts/fix-unsafe-simple.mjs",
    "fix:unsafe:dry-run": "node scripts/fix-unsafe-simple.mjs --dry-run",
    "fix:unsafe:advanced": "node scripts/fix-unsafe-issues-advanced.mjs",
    "fix:unsafe:advanced:dry-run": "node scripts/fix-unsafe-issues-advanced.mjs --dry-run",
    "fix:remaining": "node scripts/fix-remaining-unsafe.mjs",
    "fix:remaining:dry-run": "node scripts/fix-remaining-unsafe.mjs --dry-run",
    "format:assess": "node scripts/format-assessment.mjs",
    "format:backup": "node scripts/backup-before-format.mjs",
    "format:restore": "node scripts/restore-from-backup.mjs",
    "db:generate-types": "supabase gen types typescript --project-id YOUR_PROJECT_ID > src/types/database.ts"
  },
  "dependencies": {
    "@babel/core": "^7.28.0",
    "@babel/parser": "^7.28.0",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/types": "^7.28.1",
    "@cloudflare/workers-oauth-provider": "^0.0.5",
    "@hono/node-server": "^1.12.0",
    "@hono/zod-validator": "^0.7.1",
    "@langchain/anthropic": "^0.3.0",
    "@langchain/community": "^0.3.0",
    "@langchain/core": "^0.3.0",
    "@langchain/openai": "^0.3.0",
    "@modelcontextprotocol/sdk": "1.13.1",
    "@supabase/supabase-js": "^2.45.1",
    "agents": "^0.0.100",
    "axios": "^1.6.0",
    "dotenv": "^16.3.1",
    "glob": "^11.0.3",
    "hono": "^4.8.3",
    "jscodeshift": "^17.3.0",
    "jsonwebtoken": "^9.0.2",
    "just-pick": "^4.2.0",
    "langchain": "^0.3.0",
    "mammoth": "^1.6.0",
    "neo4j-driver": "^5.15.0",
    "octokit": "^5.0.3",
    "openai": "^4.56.0",
    "pdf-parse": "^1.1.1",
    "stripe": "^18.3.0",
    "uuid": "^9.0.1",
    "workers-mcp": "^0.0.13",
    "zod": "^3.25.67"
  },
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "^0.8.53",
    "@cloudflare/workers-types": "^4.20250715.0",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^24.0.10",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^10.1.5",
    "msw": "^2.10.4",
    "prettier": "^3.6.2",
    "rimraf": "^5.0.5",
    "tsx": "^4.6.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.37.0",
    "vi-fetch": "^0.8.0",
    "vitest": "^3.2.4",
    "vitest-environment-miniflare": "^2.14.4",
    "wrangler": "^4.23.0"
  }
}
